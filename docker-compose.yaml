
x-networks: &default-networks
  networks:
    - freecar-network

services:
  # MySQL
  mysql:
    image: mysql:latest
    volumes:
      - ./data/configs/sql:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=FreeCar
      - MYSQL_ROOT_PASSWORD=123456
    <<: *default-networks

  # MongoDB
  mongo:
    image: mongo:latest
    environment:
      - TZ=Asia/Shanghai
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=123456
      - MONGO_INITDB_DATABASE=FreeCar
    restart: "no"
    ports:
      - "27017:27017"
    <<: *default-networks

  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    environment:
      TZ: Asia/Shanghai
    volumes:
      - ./data/data/redis:/data
      - ./data/logs/redis:/logs
    command: redis-server --requirepass freecar
    <<: *default-networks

  minio:
    image: minio/minio:latest
    command: server --console-address ":9001" /data
    volumes:
      - ./data/configs/minio:/root/.minio
      - ./data/data/minio:/data
    environment:
      - MINIO_ACCESS_KEY=admin
      - MINIO_SECRET_KEY=admin123
    ports:
      - "9000:9000"
      - "9001:9001"
    restart: always
    <<: *default-networks

  # Consul
  consul:
    image: consul:1.15.4
    command: agent -dev -client=0.0.0.0
    ports:
      - "8500:8500"
      - "8300:8300"
      - "8301:8301"
      - "8302:8302"
      - "8600:8600/udp"
    <<: *default-networks

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:management
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    <<: *default-networks

  # Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib-dev:latest
    command: [ "--config=/etc/otel-collector-config.yaml", "" ]
    volumes:
      - ./deployment/config/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "8888"   # Prometheus' metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
      - "55679" # zpages extension
    depends_on:
      - jaeger-all-in-one
    <<: *default-networks

  # Jaeger
  jaeger-all-in-one:
    image: jaegertracing/all-in-one:latest
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "16686:16686"
      - "14268"
      - "14250:14250"
      - "6831:6831"
    <<: *default-networks

  # VictoriaMetrics
  victoriametrics:
#    container_name: victoriametrics
    image: victoriametrics/victoria-metrics
    ports:
      - "8428:8428"
      - "8089:8089"
      - "8089:8089/udp"
      - "2003:2003"
      - "2003:2003/udp"
      - "4242:4242"
    command:
      - '--storageDataPath=/storage'
      - '--graphiteListenAddr=:2003'
      - '--opentsdbListenAddr=:4242'
      - '--httpListenAddr=:8428'
      - '--influxListenAddr=:8089'
    restart: always
    <<: *default-networks

  # Grafana
  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - TZ=Asia/Shanghai
    ports:
      - "3000:3000"
    <<: *default-networks
  prometheus:
    image: prom/prometheus:latest
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - ./deployment/config/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    <<: *default-networks
  loki:
    image: grafana/loki:2.9.2
    volumes:
      - ./deployment/config/loki.yml:/etc/loki/local-config.yaml
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    <<: *default-networks

  promtail:
    image: grafana/promtail:2.9.2
    volumes:
      - ./deployment/config/promtail.yml:/etc/promtail/config.yml
      - ./app/frontend/log:/logs/frontend
    command: -config.file=/etc/promtail/config.yml
    <<: *default-networks


networks:
  freecar-network:
#    driver: overlay
#    external: